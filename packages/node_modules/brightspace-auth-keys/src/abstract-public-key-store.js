'use strict';

const assert = require('assert');

const clock = require('./clock');
const PublicKeyNotFoundError = require('../errors/public-key-not-found');

function isNotExpired(key) {
	return key.exp >= clock();
}

class AbstractPublicKeyStore {
	constructor() {
		assert('function' === typeof this._lookupPublicKeys, 'The function _lookupPublicKeys must be defined and return a promise');
		assert('function' === typeof this._storePublicKey, 'The function _storePublicKey must be defined and return a promise');
	}

	async lookupPublicKeys() {
		let keys = await this._lookupPublicKeys();

		keys = Array.isArray(keys) ? keys : [];
		keys = keys.map(JSON.parse);
		keys = keys.filter(isNotExpired);

		return keys;
	}

	async lookupPublicKey(kid) {
		const keys = await this.lookupPublicKeys();

		for (const key of keys) {
			if (key.kid === kid) {
				return key;
			}
		}

		throw new PublicKeyNotFoundError(kid);
	}

	async storePublicKey(key) {
		return this._storePublicKey(JSON.stringify(key), key.exp);
	}
}

module.exports = AbstractPublicKeyStore;
