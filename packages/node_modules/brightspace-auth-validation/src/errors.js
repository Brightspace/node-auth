'use strict';

class BadJsonWebTokenError extends Error {
	constructor(message, inner) {
		super(message);

		this.name = this.constructor.name;
		this.status = 401;

		this.inner = inner;

		if (inner && inner.stack) {
			this.stack = inner.stack;
		} else {
			Error.captureStackTrace(this, this.constructor);
		}
	}
}

class PublicKeyNotFoundError extends Error {
	constructor(kid) {
		super(`Public key "${ kid }" not found`);

		this.name = this.constructor.name;
		this.status = 403;

		Error.captureStackTrace(this, this.constructor);
	}
}

class NoAuthorizationProvidedError extends Error {
	constructor() {
		super('An authorization method wasn\'t provided');

		this.name = this.constructor.name;
		this.status = 401;

		Error.captureStackTrace(this, this.constructor);
	}
}

class PublicKeyLookupFailedError extends Error {
	constructor(inner) {
		super('An error occurred while looking up public keys. Check auth service configuration.');

		this.name = this.constructor.name;
		this.status = 503;

		this.inner = inner;

		if (inner && inner.stack) {
			this.stack = inner.stack;
		} else {
			Error.captureStackTrace(this, this.constructor);
		}
	}
}

module.exports = {
	PublicKeyNotFound: PublicKeyNotFoundError,
	NoAuthorizationProvided: NoAuthorizationProvidedError,
	BadToken: BadJsonWebTokenError,
	PublicKeyLookupFailed: PublicKeyLookupFailedError
};
